package com.letu.healthplatform.platformmanage.sys.controller;import org.apache.log4j.LogManager;import org.apache.log4j.Logger;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.ModelAttribute;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.bind.annotation.RestController;import com.letu.healthplatform.platformmanage.sys.model.Hospital;import com.letu.healthplatform.platformmanage.sys.service.HospitalService;/** * @author dzb * @date 2017年12月26日 上午10:12:45 * @version 1.0 * @description 科室 */@RestController@RequestMapping("/hospital")public class HospitalController {	    private static final Logger log = LogManager.getLogger(HospitalController.class);        @Autowired    private HospitalService hospitalService;    	/***	 * @return	 */	 @GetMapping(value="/findHospitalPage")	 public Object findHospitalPage(@ModelAttribute Hospital hospital,				@RequestParam(required=false,defaultValue="0") int page,				@RequestParam(required=false,defaultValue="0") int pageSize){		  return hospitalService.findHosptalPage(hospital,page,pageSize);	}	 	 	/***	 * 	 * 查询医院	 * @param tId 医院id	 * @return	 */	 @GetMapping(value="/findHospital/{tId}")	 public Object findHospital(@PathVariable String  tId){		  return hospitalService.findHosptal(tId);	}	 	 	/***	 * 	 * 新增医院	 * @return	 */	 @PostMapping(value="/insert")	 public Object insert(@ModelAttribute Hospital hospital){		  return hospitalService.insertSelective(hospital);	}	 	/***	 * 	 * 修改医院	 * @return	 */	 @PostMapping(value="/update")	 public Object update(@ModelAttribute Hospital hospital){		  return hospitalService.updateByPrimaryKeySelective(hospital);	}	 	 	/***	 * 	 * 删除医院	 * @param tIds  删除医院ID	 * @return	 */	 @GetMapping(value="/delete/{tIds}")	 public Object delete(@PathVariable String  tIds){		  return hospitalService.deleteByPrimaryKey(tIds);	}	 	 /***	 * 	 * 修改医院状态	 * @param tIds  医院ID	 * @return	 */	 @PostMapping(value="/updateByStatus/{tStatus}/{tIds}")	 public Object updateByStatus(@PathVariable String tStatus,@PathVariable String  tIds){		  return hospitalService.updateByStatus(tStatus,tIds);	}        }