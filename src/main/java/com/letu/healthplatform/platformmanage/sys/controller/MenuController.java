package com.letu.healthplatform.platformmanage.sys.controller;import javax.servlet.http.HttpServletRequest;import org.apache.log4j.LogManager;import org.apache.log4j.Logger;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.RestController;import com.letu.healthplatform.platformmanage.sys.model.Menu;import com.letu.healthplatform.platformmanage.sys.service.MenuService;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.ModelAttribute;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestParam;@RestController@RequestMapping("/menu")public class MenuController {    private static final Logger log = LogManager.getLogger(MenuController.class);    @Autowired    private  MenuService  menuService;             /***	 * @return	 */	 @GetMapping(value="/findMenuPage")	 public Object findMenuPage(@ModelAttribute Menu menu,				@RequestParam(required=false,defaultValue="0") int page,				@RequestParam(required=false,defaultValue="0") int pageSize){		  return menuService.findMenuPage(menu,page,pageSize);	}	 	 	/***	 * 	 * 查询菜单	 * @param tId 菜单id	 * @return	 */	 @GetMapping(value="/findMenu/{tMenuId}")	 public Object findMenu(@PathVariable String  tMenuId){		  return menuService.findMenu(tMenuId);	}	 	 /***	 * 	 * 查询菜单	 * @param tId 菜单id	 * @return	 */	 @GetMapping(value="/findMenuAll")	 public Object findMenuAll(HttpServletRequest request){		  return menuService.findMenuAll(request);	}	 	 	 	 	/***	 * 	 * 新增菜单	 * @return	 */	 @PostMapping(value="/insert")	 public Object insert(@ModelAttribute Menu menu){		  return menuService.insertSelective(menu);	}	 	/***	 * 	 * 修改菜单	 * @return	 */	 @PostMapping(value="/update")	 public Object update(@ModelAttribute Menu menu){		  return menuService.updateByPrimaryKeySelective(menu);	}	 	 	/***	 * 	 * 删除菜单	 * @param tIds  删除医院ID	 * @return	 */	 @GetMapping(value="/delete/{tIds}")	 public Object delete(@PathVariable String  tMenuIds){		  return menuService.deleteByPrimaryKey(tMenuIds);	}	 	 	 }